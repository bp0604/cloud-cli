server:
  port: 9003
spring:
  application:
    name: SERVICE-CONSUMER # 服务名称
#  datasource:
#    url: jdbc:mysql://192.168.25.128:3306/mysql?characterEncoding=UTF-8&useSSL=false&serverTimezone=CTT
#    driver-class-name: com.mysql.cj.jdbc.Driver
#    username: keats
#    password: 521
  cloud:
    loadbalancer:
      retry:
        enabled: true # 重试开关 默认 true

eureka:
  client:
    service-url: # 刚刚在Eureka Server 配置的请求地址
      defaultZone: http://localhost:9000/eureka/ # ,http://localhost:9100/eureka/
    register-with-eureka: true
#    register-with-eureka: false
    fetch-registry: true # 从Eureka获取注册信息。
  instance:
    prefer-ip-address: true
    instance-id: ${spring.cloud.client.ip-address}:${server.port} # 自定义注册ID为ip:端口的格式
#    lease-renewal-interval-in-seconds: 5 #发送心跳的间隔
#    lease-expiration-duration-in-seconds: 10 #续约到期时间
# Euraka 客户端默认每隔 30 S向服务端发送一次心跳请求，如果服务端 90 S没有收到某客户端发送的请求将视为客户端宕机。会将其从服务列表剔除

# actuator监控, http://localhost:9003/actuator
management:
  endpoints:
    web:
      # 设置是否暴露端点 默认只有health和info可见
      exposure:
        # 包括所有端点
        include: "*" # 注意需要添加引号
        # 排除端点
        exclude: shutdown
  endpoint:
    health:
      show-details: always
    #可以关闭指定的端点
    shutdown:
      enabled: false
info:
  app:
    name: ${spring.application.name}

# 可以通过 服务名：ribbon:NFLoadBalancerRuleClassName: 对应的策略全类名
SERVICE-PROVIDER:
  ribbon:
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.WeightedResponseTimeRule
    ConnectTimeout: 250 # 与服务提供方建立Http连接的超时时间
    ReadTimeout: 1000 # 接收返回数据的超时时间
    OkToRetryOnAllOperations: true # 是否对所有操作都进行重试
    MaxAutoRetriesNextServer: 1 # 切换实例的重试次数
    MaxAutoRetries: 1 # 对当前实例的重试次数(包含第一次请求，即配置1相当于请求超时就切换)

# feign的配置
feign:
  client:
    config:
      SERVICE-PROVIDER:
        loggerLevel: FULL # NONE(默认选项), BASIC, HEADERS, FULL; 内容依次丰富、性能影响依次增大
  hystrix:
    enabled: true # 打开 feign 的 hystrix 支持

# 日志
logging:
  config: classpath:logback.xml
  level:
    cn.keats.service_consumer.feign.UserServiceFeignClient: debug
